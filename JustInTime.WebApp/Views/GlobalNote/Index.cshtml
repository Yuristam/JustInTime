@using JustInTime.BLL.Controllers;
@model PaginatedList<JustInTime.DAL.Domain.Entities.GlobalNote>
@{
    ViewData["Title"] = "Index";
}

<link rel="stylesheet" href="~/css/GlobalNotesIndex.css" />

<!--this is Sakura blossom background (beginning)-->
<link rel="stylesheet" href="css/sakura.css" />
<script src="js/sakura.js" text="text/javascript"></script>

<script>
    var sakura = new Sakura('body', {
        colors: [
            {
                gradientColorStart: 'rgba(255, 183, 197, 0.9)',
                gradientColorEnd: 'rgba(255, 197, 208, 0.9)',
                gradientColorDegree: 120,
            },
            {
                gradientColorStart: 'rgba(255,189,189)',
                gradientColorEnd: 'rgba(227,170,181)',
                gradientColorDegree: 120,
            },
            {
                gradientColorStart: 'rgba(212,152,163)',
                gradientColorEnd: 'rgba(242,185,196)',
                gradientColorDegree: 120,
            },
        ],
        delay: 200,
    });
</script>
<!--this is Sakura blossom background (ending of code)-->

<!--==================================the site begins here==============================================-->
    <h1 id="pageTitle">My Notes</h1>
    <p id="descriptionOfSite">This is Global Notes. Here you can share your ideas with the whole world.</p>

<!-- this is CREATE button-->

    <p >
        <a id="GlobalButton" asp-action="Create">Create New</a>
    </p>

    <!--this is search button end-->
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Search: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>


    <table class="hidden">
        <thead>
            <tr>
                <th>
                    <a id="SortButtons" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
                </th>
                <th>
                <a id="SortButtons" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">DateCreated</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">🖋</a> |
                    <a id="GlobalButton" asp-action="Details" asp-route-id="@item.Id">Open</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">❌</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

<a id="NextPrevButtons" asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        ◀
    </a>
<a id="NextPrevButtons" asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        ▶
    </a>
